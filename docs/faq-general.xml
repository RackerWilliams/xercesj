<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE faqs SYSTEM 'dtd/faqs.dtd'>
<faqs title='General FAQs'>
  <faq title="Bugzilla">
    <q>How do I use Bugzilla to report bugs?</q>
    <a>
      <ul>
	<li>Please report bugs against the newest release.</li>
	<li>If doubt exists whether the behaviour in question is a bug 
          or a feature, 
	  please post a message to the xerces-j-user list for clarification.
         </li>
	<li> To help to eliminate duplicate or invalid bug reports, 
	  before reporting a bug, you should check if the bug is 
          reproducable in the latest code in CVS by downloading the latest           
          <jump href='http://gump.covalent.net/jars/latest/xml-xerces2/'>Xerces jars</jump>.
          If a bug is reproducable, please, query the Bugzilla database to see whether the bug 
          has already been reported. </li>
      </ul>
      <p>For more information visit the following links:</p>
      <ul>
	<li><jump href="http://nagoya.apache.org/bugzilla/">
	    http://nagoya.apache.org/bugzilla/</jump></li>
	<li><jump href="http://www.mozilla.org/bugs/">
	    http://www.mozilla.org/bugs/</jump></li>
      </ul>
      <p>We strongly encourage you write patches for problems you find and submit 
         them to xerces-j-dev@xml.apache.org. 
         In the interest of fixing bugs, adding enhancements, and addressing outstanding 
         design issues, we need your active participation in the ongoing development of Xerces2.</p>
      <anchor name="bugzilla"/>
    </a>
  </faq>

    <faq title="Jar file changes">
    <q>What happened to xerces.jar</q>
    <a>
        <p>In order to take advantage of the fact that this parser is 
        very often used in conjunction with other XML technologies, 
        such as XSLT processors, which also rely on standard
        API&apos;s like DOM and SAX, xerces.jar was split into two
        jarfiles:
        </p>
        <ul>
        <li><code>xmlParserAPIs.jar</code> contains the DOM level 2,
        SAX 2.0 and the parsing component of JAXP 1.2 API&apos;s;</li>
        <li><code>xercesImpl.jar</code> contains the implementation of
        these API&apos;s as well as the XNI API.
        </li>
        </ul>
        <p>For backwards compatibility, we have retained the ability
        to generate xerces.jar.  For instructions, see <link
        idref="install">the installation documentation</link>.
        </p>
    </a>
 </faq>
 <faq title="Obtaining smaller jars">
   <q>I don&apos;t need all the features Xerces provides, but I&apos;m
   running in an environment where space is at a premium.  Is there
   anything I can do?
 </q>
 <a>
    <p>
    Partially to address this issue, we've recently begun to
    distribute compressed jarfiles instead of our traditionally
    uncompressed files.  But if you still need a smaller jar, and
    don&apos;t need things like support for XML Schema or the WML/HTML
    DOM implementations that Xerces provides, then look at the
    <code>dtdjars</code> and <code>tinyjars</code> targets in our
    buildfile.  <code>tinyjars</code> will generate a
    <code>xercesImpl.jar</code> fifty percent smaller than the one we
    distribute.
    </p>
  </a>
 </faq>
 <faq title='Validation against DTD'>
  <q>How do I turn on DTD validation?</q>
  <a>
   <p>
    You can turn validation on and off via methods available
    on the SAX2 <code>XMLReader</code> interface. While only the 
    <code>SAXParser</code> implements the <code>XMLReader</code>
    interface, the methods required for turning on validation
    are available to both parser classes, DOM and SAX.
    <br/>
    The code snippet below shows how to turn validation on -- assume
    that <ref>parser</ref> is an instance of either 
    <code>org.apache.xerces.parsers.SAXParser</code> or
    <code>org.apache.xerces.parsers.DOMParser</code>. 
    <br/><br/>
    <code>parser.setFeature("http://xml.org/sax/features/validation", true);</code>
   </p>
  </a>
 </faq> 

 
<faq title='PSVI'>
  <q>How do I get access to the PSVI?</q>
  <a>
   <p>Xerces provides a sample component PSVIWriter that intercepts document 
handler events and collects PSVI information. For more information read <link 
idref="samples-xni">samples documentation</link> on how to use xni.parser.PSVIParser 
and xni.parser.PSVIConfiguration.
    </p>
<note>Xerces only produces light-weight  PSVI.</note>
  </a>
 </faq>
 

 <faq title='International Encodings'>
  <q>What international encodings are supported by &ParserName;?</q>
  <a>
   <ul>
    <li>UTF-8</li>
    <li>UTF-16 Big Endian, UTF-16 Little Endian</li>
    <li>IBM-1208</li>
    <li>ISO Latin-1 (ISO-8859-1)</li>
    <li>
     ISO Latin-2 (ISO-8859-2) [Bosnian, Croatian, Czech, 
     Hungarian, Polish, Romanian, Serbian (in Latin transcription), 
     Serbocroatian, Slovak, Slovenian, Upper and Lower Sorbian]
    </li>
    <li>ISO Latin-3 (ISO-8859-3) [Maltese, Esperanto]</li>
    <li>ISO Latin-4 (ISO-8859-4)</li>
    <li>ISO Latin Cyrillic (ISO-8859-5)</li>
    <li>ISO Latin Arabic (ISO-8859-6)</li>
    <li>ISO Latin Greek (ISO-8859-7)</li>
    <li>ISO Latin Hebrew (ISO-8859-8)</li>
    <li>ISO Latin-5 (ISO-8859-9) [Turkish]</li>
    <li>Extended Unix Code, packed for Japanese (euc-jp, eucjis)</li>
    <li>Japanese Shift JIS (shift-jis)</li>
    <li>Chinese (big5)</li>
    <li>Chinese for PRC (mixed 1/2 byte) (gb2312)</li>
    <li>Japanese ISO-2022-JP (iso-2022-jp)</li>
    <li>Cyrillic (koi8-r)</li>
    <li>Extended Unix Code, packed for Korean (euc-kr)</li>
    <li>Russian Unix, Cyrillic (koi8-r)</li>
    <li>Windows Thai (cp874)</li>
    <li>Latin 1 Windows (cp1252) (and all other cp125? encodings recognized by IANA)</li>
    <li>cp858</li>
    <li>EBCDIC encodings:</li>
     <ul>
      <li>EBCDIC US (ebcdic-cp-us)</li>
      <li>EBCDIC Canada (ebcdic-cp-ca)</li>
      <li>EBCDIC Netherland (ebcdic-cp-nl)</li>
      <li>EBCDIC Denmark (ebcdic-cp-dk)</li>
      <li>EBCDIC Norway (ebcdic-cp-no)</li>
      <li>EBCDIC Finland (ebcdic-cp-fi)</li>
      <li>EBCDIC Sweden (ebcdic-cp-se)</li>
      <li>EBCDIC Italy (ebcdic-cp-it)</li>
      <li>EBCDIC Spain, Latin America (ebcdic-cp-es)</li>
      <li>EBCDIC Great Britain (ebcdic-cp-gb)</li>
      <li>EBCDIC France (ebcdic-cp-fr)</li>
      <li>EBCDIC Hebrew (ebcdic-cp-he)</li>
      <li>EBCDIC Switzerland (ebcdic-cp-ch)</li>
      <li>EBCDIC Roece (ebcdic-cp-roece)</li>
      <li>EBCDIC Yugoslavia (ebcdic-cp-yu)</li>
      <li>EBCDIC Iceland (ebcdic-cp-is)</li>
      <li>EBCDIC Urdu (ebcdic-cp-ar2)</li>
      <li>Latin 0 EBCDIC</li>
      <li>EBCDIC Arabic (ebcdic-cp-ar1)</li>
     </ul>
   </ul>
   <note>UCS-4 is not yet supported, but it is hoped that support will be available soon.</note>
  </a>
 </faq>
 
 <faq title='Accessing Document on the Internet'>
  <q>Parser is not able to access schema documents or external entities available
	on the Internet</q>
  <a>
   <p>
   Parser is not able to access various external entities or schema documents 
   (imported, included etc..) available on Internet, Say, 
   "http://www.w3.org/2001/XMLSchema.xsd"  Schema for Schemas
   or "http://www.w3.org/2001/xml.xsd" schema defining xml:base, xml:lang attributes
   etc.. or any other external entity available on the Internet.
   <br/>
   				One of the reason could be your proxy settings 
   that does not allow parser to make URL connections through proxy server. To solve 
   this problem application has to set two System properties "http.proxyHost" and 
   "http.prxoyPort" before the parsing begins. Other reasons could be the strict firewall
    settings which doesn't allow any URL connection to be made to outside web or the 
    server on which documents are kept is currently not running etc..
   </p>
  </a>
 </faq> 
 
  <faq title='Incomplete character data is received via SAX'>
  <q>Why SAX parser looses some character data or why the data is split 
  into several chunks?</q>
  <a>
  <p>If you read the <jump href='http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html#characters(char[],%20int,%20int)'>SAX</jump> 
  documentation, you will find that SAX may deliver contiguous text as multiple calls to 
characters(), for reasons having to do with parser efficiency and input 
buffering. It is the programmer's responsibility to deal with that 
appropriately, e.g. by accumulating text until the next non-characters() 
event.
 </p>
  </a>
  </faq>
  
</faqs>
